<?php

namespace App\Jobs;

use App\Models\PentestSession;
use App\Models\PentestResult;
use App\Jobs\WebVulnScanJob;
use App\Jobs\BruteForceJob;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Foundation\Queue\Queueable;

class ProcessPentestSession implements ShouldQueue
{
    use Queueable;

    protected $sessionId;

    public function __construct($sessionId)
    {
        $this->sessionId = $sessionId;
    }

    public function handle(): void
    {
        $session = PentestSession::find($this->sessionId);
        if (!$session) {
            return;
        }

        $session->update([
            'status' => 'running',
            'started_at' => now()
        ]);

        try {
            foreach ($session->selected_ips as $ip) {
                foreach ($session->selected_modules as $module) {
                    $this->dispatchModuleJob($session->id, $ip, $module);
                }
            }
        } catch (\Exception $e) {
            $session->update([
                'status' => 'failed',
                'completed_at' => now()
            ]);
            throw $e;
        }
    }

    protected function dispatchModuleJob($sessionId, $ip, $module)
    {
        switch ($module) {
            case 'web_vuln':
                WebVulnScanJob::dispatch($sessionId, $ip);
                break;
            case 'brute_force':
                BruteForceJob::dispatch($sessionId, $ip);
                break;
            case 'service_enum':
                // ServiceEnumJob::dispatch($sessionId, $ip);
                break;
            case 'exploit_test':
                // ExploitTestJob::dispatch($sessionId, $ip);
                break;
        }
    }
}
